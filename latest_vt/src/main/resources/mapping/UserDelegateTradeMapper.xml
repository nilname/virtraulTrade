<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooteco.mapper.UserDelegateTradeMapper" >
  <resultMap id="BaseResultMap" type="com.ooteco.model.UserDelegateTrade" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="quantity" property="quantity" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="remain_quantity" property="remainQuantity" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="trade_type" property="tradeType" jdbcType="INTEGER" />
    <result column="is_canceled" property="isCanceled" jdbcType="BIT" />
    <result column="operate_type" property="operateType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, modify_time, user_id, price, quantity, amount, remain_quantity, 
    status, trade_type, is_canceled, operate_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ooteco.model.UserDelegateTradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vt_u_delegate_trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vt_u_delegate_trade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vt_u_delegate_trade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ooteco.model.UserDelegateTradeExample" >
    delete from vt_u_delegate_trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ooteco.model.UserDelegateTrade" >
    insert into vt_u_delegate_trade (id, create_time, modify_time, 
      user_id, price, quantity, 
      amount, remain_quantity, status, 
      trade_type, is_canceled, operate_type
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{quantity,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{remainQuantity,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{tradeType,jdbcType=INTEGER}, #{isCanceled,jdbcType=BIT}, #{operateType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ooteco.model.UserDelegateTrade" useGeneratedKeys="true" keyProperty="id">
    insert into vt_u_delegate_trade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="remainQuantity != null" >
        remain_quantity,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="tradeType != null" >
        trade_type,
      </if>
      <if test="isCanceled != null" >
        is_canceled,
      </if>
      <if test="operateType != null" >
        operate_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remainQuantity != null" >
        #{remainQuantity,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="tradeType != null" >
        #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="isCanceled != null" >
        #{isCanceled,jdbcType=BIT},
      </if>
      <if test="operateType != null" >
        #{operateType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ooteco.model.UserDelegateTradeExample" resultType="java.lang.Integer" >
    select count(*) from vt_u_delegate_trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vt_u_delegate_trade
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.remainQuantity != null" >
        remain_quantity = #{record.remainQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.tradeType != null" >
        trade_type = #{record.tradeType,jdbcType=INTEGER},
      </if>
      <if test="record.isCanceled != null" >
        is_canceled = #{record.isCanceled,jdbcType=BIT},
      </if>
      <if test="record.operateType != null" >
        operate_type = #{record.operateType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vt_u_delegate_trade
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      quantity = #{record.quantity,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      remain_quantity = #{record.remainQuantity,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      trade_type = #{record.tradeType,jdbcType=INTEGER},
      is_canceled = #{record.isCanceled,jdbcType=BIT},
      operate_type = #{record.operateType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooteco.model.UserDelegateTrade" >
    update vt_u_delegate_trade
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remainQuantity != null" >
        remain_quantity = #{remainQuantity,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="tradeType != null" >
        trade_type = #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="isCanceled != null" >
        is_canceled = #{isCanceled,jdbcType=BIT},
      </if>
      <if test="operateType != null" >
        operate_type = #{operateType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooteco.model.UserDelegateTrade" >
    update vt_u_delegate_trade
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      remain_quantity = #{remainQuantity,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      trade_type = #{tradeType,jdbcType=INTEGER},
      is_canceled = #{isCanceled,jdbcType=BIT},
      operate_type = #{operateType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>